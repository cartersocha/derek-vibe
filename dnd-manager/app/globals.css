@import "tailwindcss";

:root {
  /* Core cyberpunk palette (4 colors) */
  --cyber-cyan: #00ffff;
  --cyber-magenta: #ff00ff;
  --bg-dark: #0a0a1f;
  --bg-card: #1a1a3e;
  
  /* Text hierarchy (3 colors) */
  --text-primary: #ededed;
  --text-secondary: #94a3b8;
  --text-muted: #64748b;
  
  /* Semantic color (1 color - use with opacity variations) */
  --semantic: #ff00ff;
  
  /* Legacy support */
  --background: var(--bg-dark);
  --foreground: var(--text-primary);
  --cyber-pink: var(--cyber-magenta);
  --cyber-purple: var(--bg-card);
  --cyber-dark: var(--bg-dark);
  
  /* Semantic aliases for backward compatibility */
  --success: var(--semantic);
  --warning: var(--semantic);
  --error: var(--semantic);
  --status-active: var(--cyber-cyan);
  --status-inactive: var(--text-muted);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: var(--font-geist-mono), monospace;
}

/* Mobile optimizations */
@media (max-width: 768px) {
  /* Improve touch targets */
  button, 
  input[type="button"], 
  input[type="submit"], 
  input[type="reset"],
  a[role="button"],
  [role="button"],
  .touch-target {
    min-height: 44px;
    min-width: 44px;
    touch-action: manipulation;
  }
  
  /* Prevent zoom on input focus */
  input[type="text"],
  input[type="email"],
  input[type="password"],
  input[type="search"],
  input[type="tel"],
  input[type="url"],
  textarea,
  select {
    font-size: 16px;
    touch-action: manipulation;
  }
  
  /* Improve touch interactions */
  a, button, [role="button"] {
    -webkit-tap-highlight-color: var(--cyber-cyan);
    -webkit-tap-highlight-opacity: 0.2;
    touch-action: manipulation;
  }
  
  /* Better scrolling performance */
  * {
    -webkit-overflow-scrolling: touch;
  }
  
  /* Better text selection */
  ::selection {
    background-color: var(--cyber-cyan);
    opacity: 0.3;
    color: var(--foreground);
  }
  
  /* Performance optimizations */
  * {
    -webkit-tap-highlight-color: transparent;
  }
  
  /* Reduce motion for better performance */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
  
  /* Optimize images for mobile */
  img {
    max-width: 100%;
    height: auto;
  }
  
  /* Improve form performance */
  input, textarea, select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
}

.retro-title {
  font-family: var(--font-press-start), var(--font-geist-mono), monospace;
  text-transform: uppercase;
  letter-spacing: var(--retro-letter-spacing, 0.28em);
  text-shadow:
    2px 2px 0 var(--cyber-magenta),
    -2px -2px 0 var(--cyber-cyan),
    0 0 10px var(--cyber-cyan);
  -webkit-font-smoothing: none;
  font-smoothing: never;
}

/* Glitch text effect */
.glitch {
  position: relative;
  color: var(--cyber-cyan);
  text-transform: uppercase;
  letter-spacing: 0.15em;
  animation: glitch-skew 1s infinite linear alternate-reverse;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch::before {
  left: 2px;
  text-shadow: -2px 0 var(--cyber-magenta);
  clip: rect(44px, 450px, 56px, 0);
  animation: glitch-anim 5s infinite linear alternate-reverse;
}

.glitch::after {
  left: -2px;
  text-shadow: -2px 0 var(--cyber-cyan), 2px 2px var(--cyber-magenta);
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Subtle glitch for sidebar - less intense */
.glitch-subtle {
  position: relative;
  color: var(--cyber-cyan);
  text-transform: uppercase;
  letter-spacing: 0.15em;
}

.glitch-subtle::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 var(--cyber-magenta);
  clip: rect(44px, 450px, 56px, 0);
  animation: glitch-anim-subtle 5s infinite linear alternate-reverse;
}

.glitch-subtle::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -1px;
  text-shadow: -1px 0 var(--cyber-cyan);
  animation: glitch-anim-subtle2 3s infinite linear alternate-reverse;
}

@keyframes glitch-anim {
  0% {
    clip: rect(31px, 9999px, 94px, 0);
    transform: skew(0.18deg);
  }
  20% {
    clip: rect(54px, 9999px, 33px, 0);
    transform: skew(0.5deg);
  }
  40% {
    clip: rect(28px, 9999px, 87px, 0);
    transform: skew(0.68deg);
  }
  60% {
    clip: rect(45px, 9999px, 12px, 0);
    transform: skew(0.21deg);
  }
  80% {
    clip: rect(76px, 9999px, 44px, 0);
    transform: skew(0.35deg);
  }
  100% {
    clip: rect(19px, 9999px, 65px, 0);
    transform: skew(0.78deg);
  }
}

@keyframes glitch-anim2 {
  0% {
    clip: rect(65px, 9999px, 23px, 0);
    transform: skew(0.45deg);
  }
  20% {
    clip: rect(12px, 9999px, 78px, 0);
    transform: skew(0.12deg);
  }
  40% {
    clip: rect(87px, 9999px, 34px, 0);
    transform: skew(0.93deg);
  }
  60% {
    clip: rect(43px, 9999px, 56px, 0);
    transform: skew(0.31deg);
  }
  80% {
    clip: rect(21px, 9999px, 89px, 0);
    transform: skew(0.67deg);
  }
  100% {
    clip: rect(54px, 9999px, 15px, 0);
    transform: skew(0.22deg);
  }
}

@keyframes glitch-skew {
  0% {
    transform: skew(0deg);
  }
  10% {
    transform: skew(-2deg);
  }
  20% {
    transform: skew(1deg);
  }
  30% {
    transform: skew(-1deg);
  }
  40% {
    transform: skew(2deg);
  }
  50% {
    transform: skew(-2deg);
  }
  60% {
    transform: skew(0deg);
  }
  70% {
    transform: skew(1deg);
  }
  80% {
    transform: skew(-1deg);
  }
  90% {
    transform: skew(2deg);
  }
  100% {
    transform: skew(0deg);
  }
}

@keyframes glitch-anim-subtle {
  0% {
    clip: rect(31px, 9999px, 94px, 0);
    transform: skew(0.1deg);
  }
  20% {
    clip: rect(54px, 9999px, 33px, 0);
    transform: skew(0.3deg);
  }
  40% {
    clip: rect(28px, 9999px, 87px, 0);
    transform: skew(0.2deg);
  }
  60% {
    clip: rect(45px, 9999px, 12px, 0);
    transform: skew(0.15deg);
  }
  80% {
    clip: rect(76px, 9999px, 44px, 0);
    transform: skew(0.25deg);
  }
  100% {
    clip: rect(19px, 9999px, 65px, 0);
    transform: skew(0.1deg);
  }
}

@keyframes glitch-anim-subtle2 {
  0% {
    clip: rect(42px, 9999px, 15px, 0);
  }
  25% {
    clip: rect(68px, 9999px, 48px, 0);
  }
  50% {
    clip: rect(12px, 9999px, 73px, 0);
  }
  75% {
    clip: rect(55px, 9999px, 28px, 0);
  }
  100% {
    clip: rect(35px, 9999px, 62px, 0);
  }
}

/* Consolidated hover effects */
.hover-glow:hover {
  box-shadow: 0 0 15px currentColor;
  transition: box-shadow 0.2s ease;
}

.hover-lift:hover {
  transform: translateY(-2px);
  transition: transform 0.2s ease;
}

.hover-brightness:hover {
  filter: brightness(1.2);
  transition: filter 0.2s ease;
}

.hover-saturate:hover {
  filter: saturate(1.3);
  transition: filter 0.2s ease;
}

.hover-cyber:hover {
  color: var(--cyber-magenta);
  border-color: var(--cyber-magenta);
  box-shadow: 0 0 10px var(--cyber-magenta);
  transition: all 0.2s ease;
}

.hover-success:hover {
  color: var(--success);
  border-color: var(--success);
  transition: all 0.2s ease;
}

.hover-warning:hover {
  color: var(--warning);
  border-color: var(--warning);
  transition: all 0.2s ease;
}

/* Semantic state utilities with opacity variations */
.semantic-success {
  color: var(--semantic);
  opacity: 0.8;
}

.semantic-warning {
  color: var(--semantic);
  opacity: 0.9;
}

.semantic-error {
  color: var(--semantic);
  opacity: 1;
}

.bg-semantic-success {
  background-color: var(--semantic);
  opacity: 0.1;
}

.bg-semantic-warning {
  background-color: var(--semantic);
  opacity: 0.15;
}

.bg-semantic-error {
  background-color: var(--semantic);
  opacity: 0.2;
}

.border-semantic-success {
  border-color: var(--semantic);
  opacity: 0.3;
}

.border-semantic-warning {
  border-color: var(--semantic);
  opacity: 0.5;
}

.border-semantic-error {
  border-color: var(--semantic);
  opacity: 0.7;
}

